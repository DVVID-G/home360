# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" , "develop" ]
  pull_request:
    branches: [ "master" , "develop" ]

jobs:
  test:
    name: 🧪 Tests & Build
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: home360_test
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: ☕ Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 🔧 Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: wrapper
        
    - name: 🔧 Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: 🛠️ Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: 🧹 Clean and validate
      run: ./gradlew clean build -x test
      
    - name: 🧪 Run unit tests
      run: ./gradlew test
      env:
        SPRING_PROFILES_ACTIVE: test
        SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/home360_test
        SPRING_DATASOURCE_USERNAME: test_user
        SPRING_DATASOURCE_PASSWORD: test_password
        JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        
    - name: 🧪 Run integration tests
      run: ./gradlew integrationTest
      env:
        SPRING_PROFILES_ACTIVE: test
        SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/home360_test
        SPRING_DATASOURCE_USERNAME: test_user
        SPRING_DATASOURCE_PASSWORD: test_password
        JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      continue-on-error: true  # En caso de que no tengas tests de integración aún
        
    - name: 📊 Publish Test Results
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Gradle Tests
        path: build/test-results/test/*.xml
        reporter: java-junit
        
    - name: 📊 Generate JaCoCo Report
      run: ./gradlew jacocoTestReport
      
    - name: 📦 Build JAR
      run: ./gradlew bootJar
      
    - name: 📤 Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: home360-jar
        path: build/libs/*.jar
        retention-days: 7
        
    - name: 📤 Upload test coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: build/reports/jacoco/test/jacocoTestReport.xml
        flags: unittests
        name: codecov-umbrella
